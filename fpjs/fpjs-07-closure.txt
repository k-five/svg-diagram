دومین مفهوم مهم گلاژر هست که در ساده ترین تعریفش میشه گفت
دسترسی  یه فانکشن به متغیرهای بیرونی با رفرنس
و از دست ندادن این دسترسی حتا وقتی سکوپ بیرونی اجرا شده
popping off the stack

تعریف دقیق تر
میدونیم در زبان های مثل جاوا که گاربج کالکتور وجود داره
Garbage Collector
نقشش این هست که وقتی فانکشی اجرا شد
حافظه گرفته شده برای اون فانکشن
یعنی متغیر های داخل فانکشن ازاد بشه
اما
در جاواسکریپت کاربج کالکتور اگر متوجه بشه یه فانکشن داخلی
متغیر هایی غیر سکوپ خودش رو کپچر کرده اون حافظه رو ازاد نمیکنه
بنابراین فانکشن داخلی به متغیر های بیرونی دسترسی داره
حتا وقتی فانکسشن بیرونی اجرا شده و روی ستک نیست

ترکیپ
function as first class citizen
و
closure
یه فیچر خیلی قوی رو میسازه که کل داستان رو عوض میکنه
به این صورت که میتونیم به جای برگردوندن
returning
یه داده مثل سترینک یا عدد یه فانکشن برگردونیم
که اون فاکشن به داده های فانکشن بیرونی دسترسی داره
و ما می تونیم بعدا این فانکشن برگشتی رو اجرا کنیم
defer in execution

تا این نقطه ما کار خاصی نکردیم فقط این دو فیچر ترکیب کردیم
از این نقطه به بعد برای ترکیب این دو فیچر از یه پترین استفاده میکنیم
که بهش میگیم کریینیگ
currying
که یه حالت خاص و ویژه از ترکیب
function as first class citizen
و
closure
که موضوع پست بعدی خواهد بود

بیشتر با مثال
http://jsfun.ir/functional-programming-javascript