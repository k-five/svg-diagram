JavaScript the ugly part
قسمت زشت یعنی چیزی های که در جاواسکریپت هست اما در زبان های دیگه نیست یا خیلی که
بیشترین سر درد رو اینجا داریم مثل

browser incompatibility
یعنی توسعه دهنده فرانت فقط با یک مروگر طرف نیست بلکه چند تاست
و باید کدی نوشته بشه که به درستی در همه ی مروگرهای مطرح درست کار کنه
درسته که جی کوری این مشکل رو تا حد زیادی حل کرده اما موضوع فقط جاواسکریپت نیست
سی اس اس رو چی کار کنیم؟
یه کتابخانه دیگه برای سی اس اس؟

برای این مورد باید امید وار باشیم شرکتهای مطرح باهام همکاری کن و یه استاندارد واحد داشته باشیم

huge dependency graph
هیچ زبانی به اندازه جاواسکریپت وابستگی  خارجی ایجاد نمیکنه
برای یه صفحه ساده مجبوریم از خیلی ابزارهای دیگه استفاده کنیم
JQuery JS part
JQuery CSS part
Bootstrap JS Part
Bootstrap CSS Part
Webpack for bundling
Babel for transpiling
Node.js for having npm
npm for running commands
etc

برای این مورد باید تا جایی که میتونیم طرف استاندارد بریم و هر کتابخانه که معرفی شد رو فورا وارد سیستم مون نکنیم

dependent environment
اگه مروگر نباشه تست و ران کردن جاواسکریپت یا نشدنیه یا سخته
جه بخوایم و چه نخوایم بهش وابسته هستیم
هرچند نود جی اس داستان رو عوض کرده اما نود جی ای اینجا موضوع بحث نیست

برای این مورد کار خاصی نمی تونیم بکنیم
البته باید طرف یادگیری نود جی اس بریم
که بعدا راجبش میگم

dependent workflow
حتا اگه جاواسکریپت مون خوب باشه کدی که در نهایت زده میشه قرار هست دام رو
ایجاد
و یا ویرایش
و یا ابدیت 
کنه و این دام بدون ظاهر هست یعنی به سی اس اس هم نیاز داریم و برنامه نویس قرانت مجبوره سی اس اس رو جلو ببره
DOM = Document Object Model
CSS => Cascading Style Sheet
و این در حالیه که هم جاواسکریپت بزرگ شده
هم سی اس اس ۳ رو داریم و بزرگ تر شده
هم اچ تی ام ال نسخه ۵

برای این مورد میتونیم سراغ روش یادگیری
space repetition
بریم که یک مدل برای یاد گیری هست

بریم برای پست بعدی
JavaScript the bad part

#frontend
#developer
#programmer
#javascript
#js
#web
#nodejs