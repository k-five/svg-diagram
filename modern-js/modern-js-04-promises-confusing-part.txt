رسیدم به قسمت گیج کننده پرامیس ها در جاواسکریپت
اگه بحث های قبلی رو دنبال کرده باشید اینجا رو راحت متوجه میشید
اگه نکرده باشید اش همان و کاسه همان

چرا از پرامیس استفاده میکنیم؟ نخ اصلی رو بلاک نکنیم برای ریکوست های شبکه

حالا این سوال پیش میاد وقتی پرامیس از نخ اصلی جدا میشه
نتیجه پرامیس رو چطور بدیم یعنی برکردونیم به نخ اصلی؟
const r = promiseFunction();
console.log( r ); // ???

راه حل ساده س ولی گیج کننده

راه حل
هی چیزی که قرار بعد اون پرامیس اجرا بشه رو رپ میکنیم تو یه فانکشن
بعد اون فانکشن رو پاس میدیم به متد 
promise.then()
که وقتی
resolve
اتفاق افتاد رپر فانکشن ما هم ران بشه

یه مقدار برای کسی که با هسته زبان جاواسکریپت درگیر نشده مسخره س
به همین دلیل در
ES-2017
رپری اضافه شد به نام
async-await
که همین کار رو میکنه که میشه
const r = await promiseFunction();
console.log( r ); // okay

این همون کاری رو میکنه که بالا گفتم اما از لحاظ سینتکس ما حس نمی کنیم بعدا اتفاق میافته
در حالی که واقعیت اینکه بعدا اتفاق میفته

مثال رو بلاگ رو با نود جی اس ران کنید تا متوجه بشید

بریم برای پست بعدی
async-await