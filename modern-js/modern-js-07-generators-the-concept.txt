یکی از گیج کننده ترین فیچرهای نسخه ۶ جاواسکریپت جنریتورها
generators
البته نه وقتی کانسپت رو بفهمیم

نوشتن یه ستیت ماشین حجم زیادی از کد رو میخواد
این رو رپ کردن در یه کیورد به نام ییلد
yield
این داخل جنریتور اتفاق میافته
yield the state

نوشتن یه ایتریتور هم یه مقدار کد میخواد
این رو هم رپ کردن در یه ایتریتور منجر
iterator manager
که از طریق
iterator.next()
ستیت بعدی در دسترس خواهد بود

وقتی یه جنریتور رو مینویسم در واقع ستیت ماشین مون رو ست مکینم
function* generatorF(){ ... }

وقتی اون رو اجرا میکینم به ایتریتور منجر متصل میشیم
const iterator = generatorF();
یعنی بهمون یه ایتریتور میده که بتونیم ستیت رو جلو ببریم
forward the state

پس جنریتور ها یه ایتریتور بر می گردونن
از داخل ستیت دارن که باید تک به تک جلو بره تا به نتیجه برسه
از بیرون یه کنترل کننده داره که ستیت رو جلو میبره

بین ستیت یعنی داخل جنریتور و ایتریتور یعنی بیرون اون کامیونیکیشن هست
communication between inside and outside
communication between yield and next()

به این کامیونیکیشن پوش و پول میگیم
push and pull

و این حالت دو طرفه ست
bidirectional data binding

چرا اصلا به وجود اومدن؟
و کلا به چه دردی میخورن؟
رو در پست بعدی متوجه میشیم
بریم برای پست بعدی